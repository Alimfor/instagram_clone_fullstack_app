version: '4.2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongousr
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mongopwd
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_OPTIONS_EDITORTHEME=dark
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    restart: always
    networks:
      - mongo_network

  mongodb:
    image: mongo
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongousr
      - MONGO_INITDB_ROOT_PASSWORD=mongopwd
    volumes:
      - ./db/mongo:/data/db
    ports:
      - "27017:27017"
    networks:
      - mongo_network

  neo4j:
    image: neo4j
    container_name: neo4j
    ports:
      - "7687:7687"
      - "7474:7474"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./db/redis:/var/lib/redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    ports:
      - 9200:9200
      - 9300:9300
    restart: unless-stopped
    environment:
      discovery.type: single-node
    networks:
      - backend

  logstash:
      image: docker.elastic.co/logstash/logstash:7.8.0
      ports:
        - 5009:5009
      networks:
        - backend
      volumes:
        - ./docker/pipeline:/usr/share/logstash/pipeline

  kibana:
      image: docker.elastic.co/kibana/kibana:7.8.0
      environment:
        ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      networks:
        - backend
      ports:
        - 5601:5601

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - 9090:9090
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3001:3000
    volumes:
      - ./docker/grafana/provisioning/:/etc/grafana/provisioning/

networks:
  mongo_network:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodb_vol: